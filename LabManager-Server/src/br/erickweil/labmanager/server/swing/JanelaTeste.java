/*
 * Copyright (C) 2018 Usuario
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package br.erickweil.labmanager.server.swing;

import br.erickweil.labamanger.common.BroadcasterListener;
import br.erickweil.labamanger.common.BroadcasterMessage;
import br.erickweil.labmanager.server.ServerApp;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.event.ListDataListener;
import javax.swing.text.AbstractDocument;

/**
 *
 * @author Usuario
 */
public class JanelaTeste extends javax.swing.JFrame implements FocusListener {

    private final ServerApp server;

    /**
     * Creates new form JanelaTeste
     */
    public JanelaTeste(ServerApp server) {
        initComponents();
        this.server = server;
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        this.addFocusListener(this);
        
        combobox_msg.removeAllItems();
        for(BroadcasterMessage.Messages m : BroadcasterMessage.Messages.values())
        {
            combobox_msg.addItem(m.toString());
        }
        initElems();
    }
    
    public static void main(String[] args)
    {
        String qutoe = " aeawd  sffdg  \" \" \\\" \\ gf  \"asda \\\"asdd asd \\ \" ass ";
        System.out.println(Arrays.toString(splitSpacesNotQuoted(qutoe)));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textarea_exec = new javax.swing.JTextArea();
        cmd_executar = new javax.swing.JButton();
        check_admin = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        combobox_msg = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textarea_args = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textarea_binarydata = new javax.swing.JTextArea();
        btn_enviar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textarea_exec.setBackground(new java.awt.Color(0, 0, 0));
        textarea_exec.setColumns(20);
        textarea_exec.setFont(new java.awt.Font("Lucida Console", 0, 12)); // NOI18N
        textarea_exec.setForeground(new java.awt.Color(192, 192, 192));
        textarea_exec.setRows(5);
        textarea_exec.setText("\n\n\n______________________________________________________________________________________________\ndigite o seu comando acima, a saída aparecerá depois da barra horizontal de '_'");
        textarea_exec.setBorder(null);
        textarea_exec.setCaretColor(new java.awt.Color(255, 255, 255));
        textarea_exec.setMargin(new java.awt.Insets(0, 0, 0, 0));
        textarea_exec.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                textarea_execCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        textarea_exec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textarea_execKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(textarea_exec);

        cmd_executar.setText("Executar");
        cmd_executar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_executarActionPerformed(evt);
            }
        });

        check_admin.setText("Privilégios de Administrador");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Windows", "Linux/Unix", "Mac OS" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(check_admin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmd_executar)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmd_executar)
                    .addComponent(check_admin)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("CMD", jPanel1);

        jLabel1.setText("Message:");

        combobox_msg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Arguments:");

        textarea_args.setColumns(20);
        textarea_args.setRows(5);
        jScrollPane2.setViewportView(textarea_args);

        jLabel3.setText("BinaryData( hex notation ):");

        textarea_binarydata.setColumns(20);
        textarea_binarydata.setRows(5);
        jScrollPane3.setViewportView(textarea_binarydata);

        btn_enviar.setText("Enviar Comando");
        btn_enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(10, 10, 10)
                        .addComponent(combobox_msg, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_enviar)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(combobox_msg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_enviar))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(336, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Avançado", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textarea_execKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textarea_execKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            //try {
            //    sendExec();
            //} catch (InterruptedException ex) {
            //    Logger.getLogger(JanelaTeste.class.getName()).log(Level.SEVERE, null, ex);
            //}
        }
    }//GEN-LAST:event_textarea_execKeyPressed

    private void textarea_execCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_textarea_execCaretPositionChanged

    }//GEN-LAST:event_textarea_execCaretPositionChanged

    private void btn_enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_enviarActionPerformed
        int selected = combobox_msg.getSelectedIndex();
        if(selected < 0 || selected >= combobox_msg.getItemCount()) return;
        
        String msg_selected = combobox_msg.getItemAt(selected);
        
        String args = textarea_args.getText();
        args = args.replace("\r\n", "\n");
        String[] arguments = args.split("\n");
        
        BroadcasterMessage m = new BroadcasterMessage(
                BroadcasterMessage.All, 
                BroadcasterMessage.Messages.valueOf(msg_selected), 
                arguments);
        
        try {
            server.sendMessage(m,null);
        } catch (InterruptedException ex) {
            Logger.getLogger(JanelaTeste.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_enviarActionPerformed

    private void cmd_executarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_executarActionPerformed
        try {
                sendExec();
            } catch (InterruptedException ex) {
                Logger.getLogger(JanelaTeste.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_cmd_executarActionPerformed

    private void sendExec() throws InterruptedException
    {
        String text = textarea_exec.getText();
        textarea_exec.setText("");
        text = text.replace("\r\n", "\n");
        String[] lines = text.split("\n");
        String cmd = "";
        for(int i=0;i<lines.length;i++)
        {
            String lin = lines[i].trim();
            textarea_exec.append(lin+"\n");
            if(lin.matches("\\_+"))
                break;
            if(lin.isEmpty()) continue;
            
            if(!cmd.isEmpty())
            cmd += " && "+lin;
            else
            cmd = lin;
        }
        boolean admin = check_admin.isSelected();
        BroadcasterMessage m = new BroadcasterMessage(
                BroadcasterMessage.All, 
                admin ? BroadcasterMessage.Messages.admin_exec : BroadcasterMessage.Messages.exec, 
                new String[]{cmd}
        );
        
        server.sendMessage(m, new BroadcasterListener() {
            @Override
            public void onResponse(String threadname,String status, Object args) {
                System.out.println(threadname+":");
                if(args == null)
                {
                    appendText(threadname, new String[]{"<null>"});
                }
                else
                {
                    String[] text_response = (String[])args;
                
                    appendText(threadname,text_response);
                }
            }
        });
    }
    
    private synchronized void appendText(String threadname, String[] txt)
    {
        textarea_exec.append(threadname+":\n");
        for(String s : txt)
        {
            textarea_exec.append("\t"+s+"\n");
        }
    }
    
    public static String[] splitSpacesNotQuoted(String cmdline)
    {
        StringBuilder sb = new StringBuilder();
        List<String> lines = new ArrayList<String>();
        
        boolean waiting_quotes = false;
        boolean escaping = false;
        for(int i=0;i<cmdline.length();i++)
        {
            char c = cmdline.charAt(i);
            if(c == '\\')
            {
                escaping = true;
                continue;
            }
            
            if(escaping)
            {
               if(c == '"')
               {
                    sb.append(c);
                    escaping = false;
                    continue;
               }
               else
               {
                   sb.append('\\');
                    escaping = false;
               }
               
            }
            
            if(waiting_quotes)
            {
                if(c == '"')
                {
                    waiting_quotes = false;
                    lines.add(sb.toString());
                    sb.setLength(0);
                }
                else
                {
                    sb.append(c);
                }
            }
            else
            {
                
                if(c == '"')
                {
                    waiting_quotes = true;
                }
                else if(c == ' ')
                {
                    if(sb.length() > 0)
                    lines.add(sb.toString());
                    
                    sb.setLength(0);
                }
                else
                {
                    sb.append(c);
                }
            }
            
        }
        if(sb.length() > 0)
        lines.add(sb.toString());
        
        String[] ret = new String[lines.size()];
        ret = lines.toArray(ret);
        return ret;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_enviar;
    private javax.swing.JCheckBox check_admin;
    private javax.swing.JButton cmd_executar;
    private javax.swing.JComboBox<String> combobox_msg;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea textarea_args;
    private javax.swing.JTextArea textarea_binarydata;
    private javax.swing.JTextArea textarea_exec;
    // End of variables declaration//GEN-END:variables
    
    private void initElems()
    {
        
        textarea_exec.setText("\n" +
        "\n" +
        "\n" +
        "______________________________________________________________________________________________\n" +
        "digite o seu comando acima, a saída aparecerá depois da barra horizontal de '_'");
        textarea_exec.setCaretPosition(0);
        textarea_exec.requestFocus();
    }
    
    @Override
    public void focusGained(FocusEvent e) {
        initElems();

    }

    @Override
    public void focusLost(FocusEvent e) {
        
    }
}
